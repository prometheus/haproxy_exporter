# HELP haproxy_exporter_csv_parse_failures_total Number of errors while parsing CSV.
# TYPE haproxy_exporter_csv_parse_failures_total counter
haproxy_exporter_csv_parse_failures_total 0
# HELP haproxy_exporter_scrapes_total Current total HAProxy scrapes.
# TYPE haproxy_exporter_scrapes_total counter
haproxy_exporter_scrapes_total 1
# HELP haproxy_server_bytes_in_total Current total of incoming bytes.
# TYPE haproxy_server_bytes_in_total counter
haproxy_server_bytes_in_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_bytes_out_total Current total of outgoing bytes.
# TYPE haproxy_server_bytes_out_total counter
haproxy_server_bytes_out_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_check_failures_total Total number of failed health checks.
# TYPE haproxy_server_check_failures_total counter
haproxy_server_check_failures_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_client_aborts_total Total number of data transfers aborted by the client.
# TYPE haproxy_server_client_aborts_total counter
haproxy_server_client_aborts_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_connection_errors_total Total of connection errors.
# TYPE haproxy_server_connection_errors_total counter
haproxy_server_connection_errors_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_current_queue Current number of queued requests assigned to this server.
# TYPE haproxy_server_current_queue gauge
haproxy_server_current_queue{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_current_session_rate Current number of sessions per second over last elapsed second.
# TYPE haproxy_server_current_session_rate gauge
haproxy_server_current_session_rate{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_current_sessions Current number of active sessions.
# TYPE haproxy_server_current_sessions gauge
haproxy_server_current_sessions{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_downtime_seconds_total Total downtime in seconds.
# TYPE haproxy_server_downtime_seconds_total counter
haproxy_server_downtime_seconds_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_http_responses_total Total of HTTP responses.
# TYPE haproxy_server_http_responses_total counter
haproxy_server_http_responses_total{backend="test",code="1xx",server="127.0.0.1:8080"} 0
haproxy_server_http_responses_total{backend="test",code="2xx",server="127.0.0.1:8080"} 0
haproxy_server_http_responses_total{backend="test",code="3xx",server="127.0.0.1:8080"} 0
haproxy_server_http_responses_total{backend="test",code="4xx",server="127.0.0.1:8080"} 0
haproxy_server_http_responses_total{backend="test",code="5xx",server="127.0.0.1:8080"} 0
haproxy_server_http_responses_total{backend="test",code="other",server="127.0.0.1:8080"} 0
# HELP haproxy_server_limit_sessions Configured session limit.
# TYPE haproxy_server_limit_sessions gauge
haproxy_server_limit_sessions{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_max_queue Maximum observed number of queued requests assigned to this server.
# TYPE haproxy_server_max_queue gauge
haproxy_server_max_queue{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_max_session_rate Maximum observed number of sessions per second.
# TYPE haproxy_server_max_session_rate gauge
haproxy_server_max_session_rate{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_max_sessions Maximum observed number of active sessions.
# TYPE haproxy_server_max_sessions gauge
haproxy_server_max_sessions{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_redispatch_warnings_total Total of redispatch warnings.
# TYPE haproxy_server_redispatch_warnings_total counter
haproxy_server_redispatch_warnings_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_response_errors_total Total of response errors.
# TYPE haproxy_server_response_errors_total counter
haproxy_server_response_errors_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_retry_warnings_total Total of retry warnings.
# TYPE haproxy_server_retry_warnings_total counter
haproxy_server_retry_warnings_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_server_aborts_total Total number of data transfers aborted by the server.
# TYPE haproxy_server_server_aborts_total counter
haproxy_server_server_aborts_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_server_selected_total Total number of times a server was selected, either for new sessions, or when re-dispatching.
# TYPE haproxy_server_server_selected_total counter
haproxy_server_server_selected_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_sessions_total Total number of sessions.
# TYPE haproxy_server_sessions_total counter
haproxy_server_sessions_total{backend="test",server="127.0.0.1:8080"} 0
# HELP haproxy_server_up Current health status of the server (1 = UP, 0 = DOWN).
# TYPE haproxy_server_up gauge
haproxy_server_up{backend="test",server="127.0.0.1:8080"} 1
# HELP haproxy_server_weight Current weight of the server.
# TYPE haproxy_server_weight gauge
haproxy_server_weight{backend="test",server="127.0.0.1:8080"} 1
# HELP haproxy_up Was the last scrape of HAProxy successful.
# TYPE haproxy_up gauge
haproxy_up 1
# HELP haproxy_version_info HAProxy version info.
# TYPE haproxy_version_info gauge
haproxy_version_info{release_date="test date",version="test version"} 1
